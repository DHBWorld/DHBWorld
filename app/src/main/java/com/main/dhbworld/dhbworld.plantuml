@startuml

skinparam classBorderColor black

legend right
    | Color | Type |
    |<#B4C2E0>| Model |
    |<#E2D1E3>| View |
    |<#FEFECE>| Controller |
endlegend

title __DHBWORLD's Class Diagram__\n

  namespace com.main.dhbworld {
    class com.main.dhbworld.MainActivity {
        # onCreate()
    }
  }
  

  namespace com.main.dhbworld {
    class com.main.dhbworld.UserInteraction {
        - imageBox_canteen : LinearLayout
        - imageBox_coffee : LinearLayout
        - imageBox_printer : LinearLayout
        - no : ArrayList<Button>
        - notificationCanteen : long
        - notificationCanteenTV : TextView
        - notificationCoffee : long
        - notificationCoffeeTV : TextView
        - notificationPrinter : long
        - notificationPrinterTV : TextView
        - stateCanteenTV : TextView
        - stateCoffeeTV : TextView
        - statePrinterTV : TextView
        - yes : ArrayList<Button>
        + getNotificationCanteen()
        + getNotificationCoffee()
        + getNotificationPrinter()
        + getStateCanteen()
        + getStateCoffee()
        + getStatePrinter()
        + setNotificationCanteen()
        + setNotificationCoffee()
        + setNotificationPrinter()
        + setStateCanteen()
        + setStateCoffee()
        + setStatePrinter()
        # onCreate()
        - notificationManagement()
        - stateManagement()
        - updateInteractionState()
        - yesNoButtonsManagement()
    }
  }

namespace com.main.dhbworld {
    namespace BroadcastReceiver {
      class com.main.dhbworld.BroadcastReceiver.UpdateEventsReceiver {
          + onReceive()
          {static} + setReceiver()
      }
    }
  }

  namespace com.main.dhbworld {
    namespace Enums {
      enum InteractionState #B4C2E0 {
        CLEANING
        DEFECT
        NORMAL
        QUEUE_ABCENT
        QUEUE_LONG
        QUEUE_MIDDLE
        QUEUE_SHORT
        color
        id
        text
      }
    }
  }

    namespace com.main.dhbworld {
      namespace Firebase {
        interface com.main.dhbworld.Firebase.CurrentStatusListener {
            {abstract} + onStatusReceived()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        interface com.main.dhbworld.Firebase.DataSendListener {
            {abstract} + failed()
            {abstract} + success()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        class com.main.dhbworld.Firebase.Issue #B4C2E0 {
            - problem : int
            - timestamp : long
            + getProblem()
            + getTimestamp()
            + setProblem()
            + setTimestamp()
            + toString()
            ~ Issue()
            ~ Issue()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        interface com.main.dhbworld.Firebase.ReportCountListener {
            {abstract} + onReportCountReceived()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        interface com.main.dhbworld.Firebase.SignedInListener {
            {abstract} + onSignInError()
            {abstract} + onSignedIn()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        class com.main.dhbworld.Firebase.TooManyClicksException {
            + TooManyClicksException()
        }
      }
    }


    namespace com.main.dhbworld {
      namespace Firebase {
        class com.main.dhbworld.Firebase.Utilities {
            {static} + CATEGORY_CAFETERIA : String
            {static} + CATEGORY_COFFEE : String
            {static} + CATEGORY_PRINTER : String
            - database : FirebaseDatabase
            - editor : Editor
            {static} - emulatorIp : String
            {static} - invalidateTime : long
            {static} - invalidateTimeClicks : long
            {static} - invalidateTimeSwitch : long
            - lastClick : long
            - mAuth : FirebaseAuth
            - preferences : SharedPreferences
            - user : FirebaseUser
            + Utilities()
            + addToDatabase()
            + getCurrentStatus()
            + getReportCount()
            + getUser()
            + removeFromDatabase()
            + setCurrentStatusListener()
            + setDataSendListener()
            + setReportCountListener()
            + setSignedInListener()
            + signIn()
            {static} + subscribeToTopic()
            - getIssueDatabase()
            - getIssueDatabase()
            - getIssueDatabaseWithUser()
        }
      }
    }

  namespace com.main.dhbworld {
    namespace Fragments {
      class com.main.dhbworld.Fragments.DialogCofirmationUserInteraction #E2D1E3 {
          - nameOfSelectedState : String
          + DialogCofirmationUserInteraction()
          + DialogCofirmationUserInteraction()
          + getNameOfSelectedState()
          + getSelectedState()
      }
    }
  }

  namespace com.main.dhbworld {
    namespace Services {
      class com.main.dhbworld.Services.UserInteractionMessagingService {
          + handleIntent()
          + onMessageReceived()
          + onNewToken()
          - createNotificationChannel()
      }
    }
  }


  com.main.dhbworld.Services.UserInteractionMessagingService -up-|> com.google.firebase.messaging.FirebaseMessagingService


  com.main.dhbworld.Fragments.DialogCofirmationUserInteraction -up-|> com.google.android.material.dialog.MaterialAlertDialogBuilder
  com.main.dhbworld.Fragments.DialogCofirmationUserInteraction o-- com.main.dhbworld.Enums.InteractionState : selectedState


    com.main.dhbworld.Firebase.Utilities o-- com.main.dhbworld.Firebase.CurrentStatusListener : currentStatusListener
    com.main.dhbworld.Firebase.Utilities o-- com.main.dhbworld.Firebase.DataSendListener : dataSendListener
    com.main.dhbworld.Firebase.Utilities o-- com.main.dhbworld.Firebase.ReportCountListener : reportCountListener
    com.main.dhbworld.Firebase.Utilities o-- com.main.dhbworld.Firebase.SignedInListener : signedInListener


  com.main.dhbworld.BroadcastReceiver.UpdateEventsReceiver -up-|> android.content.BroadcastReceiver

  com.main.dhbworld.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.main.dhbworld.UserInteraction -up-|> androidx.appcompat.app.AppCompatActivity
  com.main.dhbworld.UserInteraction o-- com.main.dhbworld.Firebase.Utilities : firebaseUtilities
  com.main.dhbworld.UserInteraction o-- com.main.dhbworld.Enums.InteractionState : stateCanteen
  com.main.dhbworld.UserInteraction o-- com.main.dhbworld.Enums.InteractionState : stateCoffee
  com.main.dhbworld.UserInteraction o-- com.main.dhbworld.Enums.InteractionState : statePrinter

right footer

PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
